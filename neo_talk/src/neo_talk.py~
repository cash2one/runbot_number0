d
#!/usr/bin/env python
# coding: utf-8
# Author: Vincent FOUCAULT
# Here is a text-to-speech wrapper for Espeak
# It's part of QBO robot ros softwares


import roslib; roslib.load_manifest('neo_talk')
import rospy
from neo_talk.srv import Text2Speach # read service content (words we want to be spoken)
from neo_talk.srv import SetVoice
import os

# Some possibilities of different languages
fr_speak = "espeak -a 70 -s 140 -p50 -v mb/mb-fr1 \"%s\" | mbrola -e -C \"n n2\" /usr/share/mbrola/voices/fr1 - -.au | paplay"
en_speak = "espeak -a 70 -s 140 -p50 -v mb/mb-en1 \"%s\" | mbrola -e -C \"n n2\" /usr/share/mbrola/voices/en1 - -.au | paplay"
es_speak = "espeak -a 70 -s 140 -p50 -v mb/mb-es1 \"%s\" | mbrola -e -C \"n n2\" /usr/share/mbrola/voices/es1 - -.au | paplay"
#cn_speak = "espeak -a 70 -s 140 -p50 -v mb/mb-cn1 \"%s\" | mbrola -e -C \"n n2\" /usr/share/mbrola/cn1 - -.au | paplay"
#cn_speak ="espeak -vzh %s "
cn_speak ="ttsdemo %s "
#cn_speak ="ekho %s "
class talk():
    def __init__(self):
        rospy.init_node('talk', anonymous=True)
        s = rospy.Service('say', Text2Speach, self.Neo_talk) # create a new service called "/say" (you can see them here : rosservice list)
    def Neo_talk(self, speak):
        global cn_speak
        print cn_speak
        os.system(cn_speak % speak.sentence) # just replace "fr" to en or es...
        return []
class set_voice():
    def __init__(self):
        s = rospy.Service('set_voicetype', SetVoice, self.SetVoice)
    def SetVoice(self, voice):
        global cn_speak
        if voice.voicetype == "mandrian":
           cn_speak ="ttsdemo %s"
        elif voice.voicetype == "shannxihua":
           cn_speak ="ttsdemo_vixying %s"
        elif voice.voicetype == "yueyu":
           cn_speak ="ttsdemo_vixm %s"
        elif voice.voicetype == "sichuanhua":
           cn_speak = "ttsdemo_sichuan %s" #vixr
        elif voice.voicetype == "henanhua":
           cn_speak = "ttsdemo_henan %s"#vixk
        print "切换到目的语言类型%s"%voice.voicetype
        return True
if __name__ == '__main__':
    try:
        talk = talk()
        set_voice()
        rospy.spin()
    except rospy.ROSInterruptException: pass


