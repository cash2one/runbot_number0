#!/usr/bin/env python
# -*- coding: utf-8 -*-
##
# Authors: Vincent FOUCAULT <elpimous12@orange.fr>
#
# - programme de reconnaissance vocale, bas√© sur le ros pocketsphinx
#
#############################################################################

import roslib; roslib.load_manifest('pocketsphinx')
import rospy
import math

from geometry_msgs.msg import Twist
from std_msgs.msg import String

class voice_cmd_vel:

    def __init__(self):
        rospy.on_shutdown(self.cleanup)
        self.speed = 0.2
        self.msg = Twist()

        # publish to cmd_vel, subscribe to speech output
        self.pub_ = rospy.Publisher('cmd_vel', Twist)

# voila la commande qui m'interesse !!!
        rospy.Subscriber('recognizer/output', String, self.speechCb)

        r = rospy.Rate(10.0)
        while not rospy.is_shutdown():
            self.pub_.publish(self.msg)
            r.sleep()

    def final_result(self, msg):
        rospy.loginfo(msg.data)

    self.pub_.publish(self.msg)

if __name__=="__main__":
    rospy.init_node('reconnaissance')
    try:
        test_reco_1()
    except:
        pass



